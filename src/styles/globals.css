@tailwind base;
@tailwind components;
@tailwind utilities;

/*
#001D34
#2FA3F7
#primary-dark: #111129
*/
@layer base {
  :root {
    /* #3C0366 in HSL: hue: 271, saturation: 94%, lightness: 20% */
    /* Base colors for background and text */
    --background: 255, 255, 255; /* Pure white */
    --foreground: 48, 48, 48; /* Almost black with blue tint */

    --primary-text: 255, 251, 235;
    --check: 255, 251, 235;
    --secondary-text: 254, 243, 200;

    --content: 240, 235, 224;
    --content-secondary: 216, 211, 202;

    /*Element colors*/
    --element: 52, 31, 85;
    --element-light: 122, 132, 186;

    /* Primary colors - main action elements */
    --primary: 36, 37, 91; /* Deep purple (#3C0366) */
    --primary-dark: 17, 17, 40;
    --primary-foreground: 248, 250, 252; /* Light text on dark background */

    /* Secondary colors - less important elements */
    --secondary: 1, 7, 14; /* Very light blue */
    --secondary-foreground: 15, 23, 42; /* Dark text */

    /* Secondary background color */
    --secondary-primary: 10, 10, 10;
    --secondary-primary-text: 237, 237, 237;
    --secondary-secondary: 26, 26, 26;

    /* Accent colors - for hover states etc. */
    --accent: 241, 245, 249; /* Light blue */
    --accent-secondary: 15, 23, 42; /* Dark text */

    /* Destructive colors - for errors and deletion */
    --destructive: 239, 68, 68; /* Red */
    --destructive-secondary: 211, 24, 24; /* Light text */

    /* UI element colors */
    --border: 254, 243, 200; /* Light gray for borders */
    --border-secondary: 162, 127, 205;
    --input: 254, 243, 200; /* Same as border for inputs */
    --ring: 255, 210, 46; /* Dark color for focus rings */

    /* Border radius */
    --radius: 0.5rem; /* 8px rounded corners */

    /* Font family */
    --font-fredoka: "Fredoka", sans-serif;

    /*shadows*/
    --dropdown-shadow-primary: 0px 0px 3px rgba(32, 32, 32, 0.75);
    --dropdown-shadow-light: 0px 0px 2px rgba(58, 58, 58, 0.336);

    --shadow-primary: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    --shadow-secondary: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    --shadow-light: 0 3px 6px rgba(var(--content), 0.16), 0 3px 6px rgba(104, 104, 104, 0.3);
    --shadow-light-secondary: 0 1px 3px rgba(var(--content), 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    --shadow-top: 0px -4px 10px 0px rgba(0, 0, 0, 0.5);
    --shadow-left: -12px 0px 8px -13px rgba(0, 0, 0, 0.12);
    --shadow-inset: 0px 0px 2px 0px rgba(10, 37, 64, 0.35) inset;

    /*transition*/
    --transition: 0.3s;
    --transition-slow: 0.5s;

    /*sizes*/
    --small: 15rem;
    --semi-small: 20rem;
    --medium: 25rem;
    --large: 35rem;
  }

  /* Dark mode - inverted colors */
  /* .dark {
    
    --background: rgb(2, 8, 23); 
    --foreground: rgb(248, 250, 252); 

    --primary: rgb(53, 3, 99); 
    --primary-foreground: rgb(248, 250, 252); 

    --secondary: rgb(30, 41, 59); 
    --secondary-foreground: rgb(248, 250, 252); 

    --accent: rgb(30, 41, 59);
    --accent-foreground: rgb(248, 250, 252); 

    --destructive: rgb(127, 29, 29);
    --destructive-foreground: rgb(248, 250, 252); 

    --border: rgb(30, 41, 59);
    --input: rgb(30, 41, 59); 
    --ring: rgb(203, 213, 225); 
  }*/
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/*@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}*/
html {
  scrollbar-gutter: stable;
}
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.144);
}

::-webkit-scrollbar-thumb {
  background: #333;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.custom-scroll {
  overflow-y: auto;
  scrollbar-width: 6px;
  scrollbar-color: #333 #0a0a0a;
}

body {
  color: hsl(var(--foreground));
  background: var(--background);
  font-family: var(--font-fredoka), system-ui, sans-serif;
}

.max-width {
  max-width: 80rem;
}

.large-width {
  width: 80rem;
  max-width: 100%;
}

.intro-slide {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 2rem;
}

.primary-shadow {
  box-shadow:
    0 3px 6px rgba(0, 0, 0, 0.16),
    0 3px 6px rgba(0, 0, 0, 0.23);
}

.secondary-shadow {
  box-shadow:
    0 1px 3px rgba(0, 0, 0, 0.12),
    0 1px 2px rgba(0, 0, 0, 0.24);
}

.bottom-shadow {
  box-shadow: 0px 13px 22px -19px rgba(0, 0, 0, 0.45);
}

.max-z {
  z-index: 10;
}

/*PROFILE STYLES*/

.profile-container {
  display: grid;
  grid-template-columns: minmax(0, 1fr) 2fr;
  grid-auto-rows: max-content;
}

.pokemon-container {
  display: grid;
  place-self: start end;
  overflow-y: auto;
  position: absolute;
  grid-auto-rows: min-content;
  max-height: 25rem;
  scrollbar-gutter: stable;
}

.search-header {
  animation: bg-fill linear both;
  animation-timeline: scroll();
  animation-range: 0vh 5rem;
}

@keyframes bg-fill {
  to {
    background: rgba(var(--element-light));
    background: rgb(66, 68, 95);
    background: rgb(var(--primary-dark));
  }
}

.profile-img {
  filter: drop-shadow(var(--dropdown-shadow-primary));
}

.profile-pokemon-img {
  margin-inline: auto;
  filter: drop-shadow(var(--dropdown-shadow-light));
}

.profile-info-card {
  width: fit-content;
  place-self: end start;
}

.pokemon-six {
  display: grid;
  gap: 0.5rem;
  grid-template-columns: repeat(6, minmax(0, 1fr));
  position: absolute;
  inset: auto auto -4rem 0;
}

/*Location page styles*/

.location-page {
  display: grid;
  position: relative;
  grid-template-rows: 1fr auto;
  height: calc(100dvh - 3.5rem);
  overflow: hidden;
  /* grid-auto-rows: min-content; */
}

.location-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
/* Slides are same, but it's easier to keep them separate for future modifications */
.first-slide {
  & > :first-child {
    place-self: end;
  }
  & > :nth-child(2) {
    place-self: end start;
  }
}

.second-slide {
  & > :first-child {
    place-self: end;
  }
  & > :nth-child(2) {
    place-self: end start;
  }
}

.third-slide {
  & > :first-child {
    place-self: end;
  }
  & > :nth-child(2) {
    place-self: end start;
  }
}

.pick-character {
  filter: brightness(50%);
  cursor: pointer;
  transition: var(--transition);
  &:hover {
    filter: brightness(100%);
    scale: 1.05;
  }
}

.pick-pokemon {
  cursor: pointer;
  transition: var(--transition-slow);
  filter: brightness(50%) blur(1px);
  z-index: 2;
}

.pokemon-card-intro {
  display: grid;
  position: relative;
  width: 15rem;
  gap: 1rem;
  cursor: pointer;
  place-items: center;
  p {
    hyphens: auto;
  }
  &:hover {
    img {
      filter: brightness(100%);
    }
  }
}

.pokemon-details {
  display: grid;
  gap: 0.5rem;
  border-radius: 0.35rem;
  border-radius: 8% 92% 7% 93% / 99% 7% 93% 1%;
  box-shadow: 0 0 4px gray;
  position: absolute;
  padding-top: 4rem;
  top: 5rem;
  padding-inline: 1rem;
  padding-bottom: 1rem;
  overflow: hidden;
}

.toast {
  translate: 0 0;
  transition: var(--transition);
  opacity: 1;
  hyphens: auto;
  @starting-style {
    translate: 0 5rem;
    opacity: 0;
  }
}

.toast-leave {
  animation: leave var(--transition) linear;
}

/*Loader*/
.loader {
  width: 0;
  height: 4.8px;
  display: inline-block;
  position: relative;
  background: #fff;
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  box-sizing: border-box;
  animation: animFw 2s linear infinite;
}
.loader::after,
.loader::before {
  content: "";
  width: 10px;
  height: 1px;
  background: #fff;
  position: absolute;
  top: 9px;
  right: -2px;
  opacity: 0;
  transform: rotate(-45deg) translateX(0px);
  box-sizing: border-box;
  animation: coli1 0.3s linear infinite;
}
.loader::before {
  top: -4px;
  transform: rotate(45deg);
  animation: coli2 0.3s linear infinite;
}

@keyframes animFw {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

@keyframes coli1 {
  0% {
    transform: rotate(-45deg) translateX(0px);
    opacity: 0.7;
  }
  100% {
    transform: rotate(-45deg) translateX(-45px);
    opacity: 0;
  }
}

@keyframes coli2 {
  0% {
    transform: rotate(45deg) translateX(0px);
    opacity: 1;
  }
  100% {
    transform: rotate(45deg) translateX(-45px);
    opacity: 0.7;
  }
}

/*footer*/

.about-day {
  --about-day-start: -2rem -2rem;
  --about-day-end: -2rem 5rem;
  display: grid;
  gap: 1rem;
  animation: go-in var(--transition) linear;
  translate: var(--about-day-start);

  &.deactive {
    animation: go-out var(--transition) linear;
  }
}

@keyframes go-in {
  from {
    translate: var(--about-day-end);
    opacity: 0;
  }
  to {
    translate: var(--about-day-start);
    opacity: 1;
  }
}

@keyframes go-out {
  from {
    translate: var(--about-day-start);
    opacity: 1;
  }
  to {
    translate: var(--about-day-end);
    opacity: 0;
  }
}

.hourglass {
  filter: drop-shadow(var(--dropdown-shadow-light)) grayscale(0.9);
  transition: var(--transition);
  &:hover {
    rotate: 30deg;
  }
  &.is-active {
    filter: drop-shadow(var(--dropdown-shadow-light)) grayscale(0);
  }
}
@keyframes leave {
  from {
    translate: 0 0;
    opacity: 1;
  }
  to {
    translate: 0 10rem;
    opacity: 0;
  }
}

.progress-bar {
  position: absolute;
  height: 2px;
  transition: var(--transition) linear;
}

.left-border {
  position: absolute;
  left: 0.5rem;
  height: 80%;
  width: 2px;
}

.blur-on {
  animation: blur-on var(--transition-slow) ease-in-out;
}

.blur-on-quick {
  animation: blur-on var(--transition) ease-in-out;
}

.slide-in {
  animation: slide-in var(--transition) ease-in-out;
}

.no-nav {
}

body:has(.no-nav) {
  .header {
    display: none;
  }
  .footer {
    display: none;
  }
}

@keyframes blur-on {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-in {
  from {
    translate: 0rem 5rem;
    opacity: 0;
  }
  to {
    translate: 0 0;
    opacity: 1;
  }
}

.slide-left-to-right {
  animation: slide-left-to-right var(--transition) ease-in-out;
}

@keyframes slide-left-to-right {
  from {
    translate: -5rem 0;
    opacity: 0;
  }
  to {
    translate: 0 0;
    opacity: 1;
  }
}

@keyframes pulse {
  50% {
    opacity: 0.75;
  }
}
.custom-pulse {
  animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/*animation*/

button.animation-link {
  position: relative;
  transition: var(--transition);
  &:hover {
    &::before {
      width: 100%;
    }
  }
  &::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: black;
    transition: var(--transition);
  }
}

/*expander component*/
.expander {
  display: grid;
  grid-template-rows: 0fr;
  overflow: hidden;
  transition: grid-template-rows var(--transition);
  &.up {
    position: absolute;
    bottom: 0;
    left: 0;
  }

  &.open {
    grid-template-rows: 1fr;
    .expander-content {
      visibility: visible;
    }
  }
}

.expander-content {
  min-height: 0;
  visibility: hidden;
  transition: visibility var(--transition);
}

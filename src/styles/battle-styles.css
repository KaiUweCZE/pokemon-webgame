@property --border-radius {
  syntax: "<length> | <percentage>";
  inherits: false;
  initial-value: 0.4rem;
}

@property --border-radius-small {
  syntax: "<length> | <percentage>";
  inherits: false;
  initial-value: 0.2rem;
}

@property --pattern-color {
  syntax: "<color>";
  inherits: false;
  initial-value: #cab991;
}

@property --pattern-color-secondary {
  syntax: "<color>";
  inherits: false;
  initial-value: #d2c3a1;
}

@property --pattern-color-tertiary {
  syntax: "<color>";
  inherits: false;
  initial-value: rgb(77, 76, 72);
}

.battle-window {
  display: grid;
  grid-template-rows: minmax(0, 5fr) minmax(0, 2fr);
  height: clamp(20rem, 50%, 50rem);
  aspect-ratio: 12/8;
  overflow: hidden;
  --border-radius-small: 0.1rem;
  --border-radius: 0.35rem;
  --pattern-color: rgb(254, 230, 133);
  --pattern-color-secondary: rgb(214, 186, 74);
  --pattern-color-tertiary: rgb(77, 76, 72);
}

.battle-container {
  display: grid;
  grid-template-rows: minmax(0, 1fr) minmax(0, 1fr);
  overflow: hidden;
  background:
    linear-gradient(
      45deg,
      #0000 calc(25% / 3),
      var(--pattern-color) 0 calc(50% / 3),
      #0000 0 calc(250% / 3),
      var(--pattern-color) 0 calc(275% / 3),
      #0000 0
    ),
    linear-gradient(
      45deg,
      var(--pattern-color) calc(25% / 3),
      #0000 0 calc(50% / 3),
      var(--pattern-color) 0 25%,
      #0000 0 75%,
      var(--pattern-color) 0 calc(250% / 3),
      #0000 0 calc(275% / 3),
      var(--pattern-color) 0
    ),
    linear-gradient(
      -45deg,
      #0000 calc(25% / 3),
      var(--pattern-color) 0 calc(50% / 3),
      #0000 0 calc(250% / 3),
      var(--pattern-color) 0 calc(275% / 3),
      #0000 0
    ),
    linear-gradient(
        -45deg,
        var(--pattern-color) calc(25% / 3),
        #0000 0 calc(50% / 3),
        var(--pattern-color) 0 25%,
        #0000 0 75%,
        var(--pattern-color) 0 calc(250% / 3),
        #0000 0 calc(275% / 3),
        var(--pattern-color) 0
      )
      var(--pattern-color-secondary);
  background-size: 20px 20px;
  background-position:
    0 0,
    10px 10px;
  background-image: repeating-linear-gradient(
    0deg,
    var(--pattern-color),
    var(--pattern-color) 5px,
    transparent 5px,
    transparent
  );
  background-size: 10px 10px;
  background-color: var(--pattern-color-secondary);
}

.enemy-box {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  overflow: hidden;
}

.enemy-stats-box {
  grid-column: 1;
  display: grid;
  overflow: hidden;
  transition: var(--transition);
  .battle-pokemon-stats {
    place-self: center end;
    translate: 0 -2rem;
  }
  &.enemy-done {
    translate: -15rem;
  }
}

.enemy-image-box {
  grid-column: 3;
  display: grid;
  position: relative;
  overflow: hidden;
}

.enemy-image {
  place-self: center;
  z-index: 1;
  filter: drop-shadow(4px 3px 1px rgba(54, 54, 54, 0.6));
  transition: var(--transition);
  &.enemy-done {
    filter: brightness(30%);
    translate: 15rem;
  }
}

.enemy-field {
  position: absolute;
  place-self: end center;
  bottom: -2rem;
}

.user-box {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  overflow: hidden;
}

.user-stats-box {
  grid-column: 3;
  display: grid;
  overflow: hidden;
  .battle-pokemon-stats {
    place-self: center start;
    translate: 0 1rem;
  }
}

.user-image-box {
  grid-column: 1;
  display: grid;
  overflow: hidden;
}

.user-pokemon-image {
  place-self: end end;
  display: grid;
  overflow: hidden;
  filter: drop-shadow(-4px 3px 1px rgba(54, 54, 54, 0.3));
}

.battle-menu {
  display: grid;
  position: relative;
  grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
  grid-template-rows: minmax(0, 1fr);

  max-height: 100%;
}

.battle-menu-buttons {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.battle-pokemon-stats {
  display: grid;
  position: relative;
  height: fit-content;
  width: 70%;
  place-self: center;
  border-radius: var(--border-radius) var(--border-radius-small);
  overflow: hidden;
  gap: 0;
}

.bar-box {
  display: grid;
  grid-template-columns: min-content 1fr;
  padding: 0;
  align-items: center;
  border-radius: var(--border-radius);
}

.name-and-level {
  display: flex;
  justify-content: space-between;
}

.exp-bar {
  width: 90%;
}

.new-level-box {
  display: grid;
  grid-template-columns: 3rem minmax(0, 1fr);
  align-items: center;
}

.new-stats {
  display: grid;
  grid-template-columns: 2fr 1fr;
  align-items: center;
}
